trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'acr-sc'
  imageRepository: 'mavenpipeline'
  containerRegistry: 'acrnew09.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'mypipesecret'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
- stage: Deploytodev
  displayName: Deploytodev
  jobs:
  - deployment:
    displayName: Dev deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@5
            displayName: 'Replace tokens in **/*.yaml'
            inputs:
              rootDirectory: '$(build.artifactstagingdirectory)'
              targetFiles: '**/springboot-dep-svc-new.yaml'
      
       
          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'kube-sc'
              namespace: 'default'
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(build.artifactstagingdirectory)/springboot-dep-svc-new.yaml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'az-rm-sc'
              azureContainerRegistry: 'acrnew09.azurecr.io'
              secretName: 'mypipesecret'