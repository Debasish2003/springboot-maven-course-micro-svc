# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e8b29042-27ec-468c-88ca-853de99d40f3'
  imageRepository: 'debasishspringbootmavencoursemicrosvc'
  containerRegistry: 'azacrjan23.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  HELM_EXPERIMENTAL_OCI: 1
  projectName: "maven-helm"
  acr.repo.name: mymavenapp
  releaseName: 'helmdemo'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
  
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: HelmInstaller@0
      displayName: install helm
      inputs:
        helmVersion: 'latest'
        installKubectl: false  
    - script: |
        helm registry login $(containerRegistry) --username $(acr.login.username) --password $(acr.login.password)
      displayName: login to acr using helm	
    - script: |
        helm package mymavenapp/
      displayName: save the chart and set the alias
    - script: |
        helm push mymavenapp-0.1.0.tgz oci://$(containerRegistry)
      displayName: push the chart to acr
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
  
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmInstaller@0
            displayName: install helm
            inputs:
              helmVersion: 'latest'
              installKubectl: false
          - script: |
              echo "$(acr.login.password)" | helm registry login $(containerRegistry) --username $(acr.login.username) --password-stdin
            displayName: login to acr using helm

          - bash: |
              helm pull oci://$(containerRegistry)/mymavenapp --version 0.1.0
            displayName: get helm chart on agent
          - bash: |
              tar xvf $(system.defaultworkingdirectory)/mymavenapp-0.1.0.tgz
            displayName: unzip downloaded helm chart 
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(system.defaultworkingdirectory)'
              Contents: '**'
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
          
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'rg-devops'
              azureResourceGroup: 'my-rg'
              kubernetesCluster: 'mykube'
              namespace: 'default'
              command: 'install'
              chartType: 'FilePath'
              chartPath: '$(Build.ArtifactStagingDirectory)/mymavenapp/'
              chartVersion: '0.1.0'
              releaseName: 'helmdemo'  
            
            
         
          
